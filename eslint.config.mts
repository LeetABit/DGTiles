//  Copyright (c) Hubert Bukowski. All rights reserved.
//  Licensed under the MIT License.
//  See LICENSE file in the project root for full license information.

import tseslint, {
    type InfiniteDepthConfigWithExtends,
} from "typescript-eslint";
import eslintConfigPrettier from "eslint-config-prettier";
import js from "@eslint/js";
import jsdoc from "eslint-plugin-jsdoc";
import stylistic from "@stylistic/eslint-plugin";

const MAX_FUNCTION_LINES = 200;
const MAX_FUNCTION_STATEMENTS = 50;
const INDENTATION_SIZE = 4;

const jsRules: InfiniteDepthConfigWithExtends = {
    rules: {
        "accessor-pairs": "warn",
        "array-callback-return": "warn",
        "arrow-body-style": "warn",
        "block-scoped-var": "warn",
        camelcase: "warn",
        "capitalized-comments": "warn",
        "class-methods-use-this": "off",
        complexity: "warn",
        "consistent-return": "off",
        "consistent-this": "warn",
        "constructor-super": "warn",
        curly: "warn",
        "default-case": "warn",
        "default-case-last": "warn",
        "default-param-last": "off",
        "dot-notation": "off",
        eqeqeq: "warn",
        "for-direction": "warn",
        "func-name-matching": "warn",
        "func-names": "warn",
        "func-style": ["warn", "declaration", { allowArrowFunctions: true }],
        "getter-return": "warn",
        "grouped-accessor-pairs": "warn",
        "guard-for-in": "warn",
        "id-denylist": "warn",
        "id-length": "warn",
        "id-match": "warn",
        "init-declarations": "off",
        "logical-assignment-operators": "warn",
        "max-classes-per-file": "warn",
        "max-depth": "warn",
        "max-lines": "warn",
        "max-lines-per-function": ["warn", MAX_FUNCTION_LINES],
        "max-nested-callbacks": "warn",
        "max-params": "off",
        "max-statements": [
            "warn",
            MAX_FUNCTION_STATEMENTS,
            { ignoreTopLevelFunctions: true },
        ],
        "new-cap": "warn",
        "no-alert": "warn",
        "no-array-constructor": "off",
        "no-async-promise-executor": "warn",
        "no-await-in-loop": "off",
        "no-bitwise": "warn",
        "no-caller": "warn",
        "no-case-declarations": "warn",
        "no-class-assign": "warn",
        "no-compare-neg-zero": "warn",
        "no-cond-assign": "warn",
        "no-console": "warn",
        "no-const-assign": "warn",
        "no-constant-binary-expression": "warn",
        "no-constant-condition": "warn",
        "no-constructor-return": "warn",
        "no-continue": "warn",
        "no-control-regex": "warn",
        "no-debugger": "warn",
        "no-delete-var": "warn",
        "no-div-regex": "warn",
        "no-dupe-args": "warn",
        "no-dupe-class-members": "off",
        "no-dupe-else-if": "warn",
        "no-dupe-keys": "warn",
        "no-duplicate-case": "warn",
        "no-duplicate-imports": "warn",
        "no-else-return": "warn",
        "no-empty": "warn",
        "no-empty-character-class": "warn",
        "no-empty-function": "off",
        "no-empty-pattern": "warn",
        "no-empty-static-block": "warn",
        "no-eq-null": "warn",
        "no-eval": "warn",
        "no-ex-assign": "warn",
        "no-extend-native": "warn",
        "no-extra-bind": "warn",
        "no-extra-boolean-cast": "warn",
        "no-extra-label": "warn",
        "no-fallthrough": "warn",
        "no-func-assign": "warn",
        "no-global-assign": "warn",
        "no-implicit-coercion": "warn",
        "no-implicit-globals": "warn",
        "no-implied-eval": "off",
        "no-import-assign": "warn",
        "no-inline-comments": "warn",
        "no-inner-declarations": "warn",
        "no-invalid-regexp": "warn",
        "no-invalid-this": "off",
        "no-irregular-whitespace": "warn",
        "no-iterator": "warn",
        "no-label-var": "warn",
        "no-labels": "warn",
        "no-lone-blocks": "warn",
        "no-lonely-if": "warn",
        "no-loop-func": "off",
        "no-loss-of-precision": "warn",
        "no-magic-numbers": "off",
        "no-misleading-character-class": "warn",
        "no-multi-assign": "warn",
        "no-multi-str": "warn",
        "no-negated-condition": "warn",
        "no-nested-ternary": "warn",
        "no-new": "warn",
        "no-new-func": "warn",
        "no-new-native-nonconstructor": "warn",
        "no-new-symbol": "warn",
        "no-new-wrappers": "warn",
        "no-nonoctal-decimal-escape": "warn",
        "no-obj-calls": "warn",
        "no-object-constructor": "warn",
        "no-octal": "warn",
        "no-octal-escape": "warn",
        "no-param-reassign": "warn",
        "no-plusplus": "warn",
        "no-promise-executor-return": "warn",
        "no-proto": "warn",
        "no-prototype-builtins": "warn",
        "no-redeclare": "off",
        "no-regex-spaces": "warn",
        "no-restricted-exports": "warn",
        "no-restricted-globals": "warn",
        "no-restricted-imports": "off",
        "no-restricted-properties": "warn",
        "no-restricted-syntax": "warn",
        "no-return-assign": "warn",
        "no-return-await": "off",
        "no-script-url": "warn",
        "no-self-assign": "warn",
        "no-self-compare": "warn",
        "no-sequences": "warn",
        "no-setter-return": "warn",
        "no-shadow": "off",
        "no-shadow-restricted-names": "warn",
        "no-sparse-arrays": "warn",
        "no-template-curly-in-string": "warn",
        "no-ternary": "warn",
        "no-this-before-super": "warn",
        "no-throw-literal": "off",
        "no-undef": "off",
        "no-undef-init": "off",
        "no-undefined": "off",
        "no-underscore-dangle": "warn",
        "no-unexpected-multiline": "warn",
        "no-unmodified-loop-condition": "warn",
        "no-unneeded-ternary": "warn",
        "no-unreachable": "warn",
        "no-unreachable-loop": "warn",
        "no-unsafe-finally": "warn",
        "no-unsafe-negation": "warn",
        "no-unsafe-optional-chaining": "warn",
        "no-unused-expressions": "off",
        "no-unused-labels": "warn",
        "no-unused-private-class-members": "warn",
        "no-unused-vars": "off",
        "no-use-before-define": "off",
        "no-useless-assignment": "warn",
        "no-useless-backreference": "warn",
        "no-useless-call": "warn",
        "no-useless-catch": "warn",
        "no-useless-computed-key": "warn",
        "no-useless-concat": "warn",
        "no-useless-constructor": "off",
        "no-useless-escape": "warn",
        "no-useless-rename": "warn",
        "no-useless-return": "warn",
        "no-var": "warn",
        "no-void": "warn",
        "no-warning-comments": "warn",
        "no-with": "warn",
        "object-shorthand": "warn",
        "one-var": "off",
        "operator-assignment": "warn",
        "prefer-arrow-callback": "warn",
        "prefer-const": "warn",
        "prefer-destructuring": "off",
        "prefer-exponentiation-operator": "warn",
        "prefer-named-capture-group": "warn",
        "prefer-numeric-literals": "warn",
        "prefer-object-has-own": "warn",
        "prefer-object-spread": "warn",
        "prefer-promise-reject-errors": "off",
        "prefer-regex-literals": "warn",
        "prefer-rest-params": "warn",
        "prefer-spread": "warn",
        "prefer-template": "warn",
        radix: "warn",
        "require-atomic-updates": "warn",
        "require-await": "off",
        "require-unicode-regexp": "warn",
        "require-yield": "warn",
        "sort-imports": "warn",
        "sort-keys": "warn",
        "sort-vars": "warn",
        strict: "warn",
        "symbol-description": "warn",
        "unicode-bom": "warn",
        "use-isnan": "warn",
        "valid-typeof": "warn",
        "vars-on-top": "warn",
        yoda: "warn",
    },
};

const typescriptRules: InfiniteDepthConfigWithExtends = {
    rules: {
        "@typescript-eslint/adjacent-overload-signatures": "warn",
        "@typescript-eslint/array-type": "warn",
        "@typescript-eslint/await-thenable": "warn",
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/ban-tslint-comment": "warn",
        "@typescript-eslint/class-literal-property-style": "warn",
        "@typescript-eslint/class-methods-use-this": "warn",
        "@typescript-eslint/consistent-generic-constructors": "warn",
        "@typescript-eslint/consistent-indexed-object-style": "warn",
        "@typescript-eslint/consistent-return": "off",
        "@typescript-eslint/consistent-type-assertions": "warn",
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/consistent-type-exports": "warn",
        "@typescript-eslint/consistent-type-imports": "warn",
        "@typescript-eslint/default-param-last": "warn",
        "@typescript-eslint/dot-notation": "warn",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": "warn",
        "@typescript-eslint/explicit-module-boundary-types": "warn",
        "@typescript-eslint/init-declarations": "warn",
        "@typescript-eslint/max-params": "warn",
        "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/method-signature-style": "warn",
        "@typescript-eslint/naming-convention": "warn",
        "@typescript-eslint/no-array-constructor": "warn",
        "@typescript-eslint/no-array-delete": "warn",
        "@typescript-eslint/no-base-to-string": "warn",
        "@typescript-eslint/no-confusing-non-null-assertion": "warn",
        "@typescript-eslint/no-confusing-void-expression": "warn",
        "@typescript-eslint/no-deprecated": "warn",
        "@typescript-eslint/no-dupe-class-members": "off",
        "@typescript-eslint/no-duplicate-enum-values": "warn",
        "@typescript-eslint/no-duplicate-type-constituents": "warn",
        "@typescript-eslint/no-dynamic-delete": "warn",
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/no-empty-object-type": "warn",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-extra-non-null-assertion": "warn",
        "@typescript-eslint/no-extraneous-class": "warn",
        "@typescript-eslint/no-floating-promises": "warn",
        "@typescript-eslint/no-for-in-array": "warn",
        "@typescript-eslint/no-implied-eval": "warn",
        "@typescript-eslint/no-import-type-side-effects": "warn",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-invalid-this": "off",
        "@typescript-eslint/no-invalid-void-type": "warn",
        "@typescript-eslint/no-loop-func": "warn",
        "@typescript-eslint/no-magic-numbers": ["warn", { ignore: [0, 1] }],
        "@typescript-eslint/no-meaningless-void-operator": "warn",
        "@typescript-eslint/no-misused-new": "warn",
        "@typescript-eslint/no-misused-promises": "warn",
        "@typescript-eslint/no-misused-spread": "warn",
        "@typescript-eslint/no-mixed-enums": "warn",
        "@typescript-eslint/no-namespace": "warn",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-redeclare": "off",
        "@typescript-eslint/no-redundant-type-constituents": "warn",
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/no-restricted-imports": "warn",
        "@typescript-eslint/no-restricted-types": "warn",
        "@typescript-eslint/no-shadow": "warn",
        "@typescript-eslint/no-this-alias": "warn",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/no-unnecessary-parameter-property-assignment":
            "warn",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-unnecessary-template-expression": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "warn",
        "@typescript-eslint/no-unnecessary-type-constraint": "warn",
        "@typescript-eslint/no-unnecessary-type-parameters": "warn",
        "@typescript-eslint/no-unsafe-argument": "warn",
        "@typescript-eslint/no-unsafe-assignment": "warn",
        "@typescript-eslint/no-unsafe-call": "warn",
        "@typescript-eslint/no-unsafe-declaration-merging": "warn",
        "@typescript-eslint/no-unsafe-enum-comparison": "warn",
        "@typescript-eslint/no-unsafe-function-type": "warn",
        "@typescript-eslint/no-unsafe-member-access": "warn",
        "@typescript-eslint/no-unsafe-return": "warn",
        "@typescript-eslint/no-unsafe-type-assertion": "warn",
        "@typescript-eslint/no-unsafe-unary-minus": "warn",
        "@typescript-eslint/no-unused-expressions": "warn",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-use-before-define": "warn",
        "@typescript-eslint/no-useless-constructor": "warn",
        "@typescript-eslint/no-useless-empty-export": "warn",
        "@typescript-eslint/no-wrapper-object-types": "warn",
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/only-throw-error": "warn",
        "@typescript-eslint/parameter-properties": "warn",
        "@typescript-eslint/prefer-as-const": "warn",
        "@typescript-eslint/prefer-destructuring": "warn",
        "@typescript-eslint/prefer-enum-initializers": "warn",
        "@typescript-eslint/prefer-find": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-literal-enum-member": "warn",
        "@typescript-eslint/prefer-namespace-keyword": "warn",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-promise-reject-errors": "warn",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-regexp-exec": "warn",
        "@typescript-eslint/prefer-return-this-type": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/promise-function-async": "warn",
        "@typescript-eslint/related-getter-setter-pairs": "warn",
        "@typescript-eslint/require-array-sort-compare": "warn",
        "@typescript-eslint/require-await": "warn",
        "@typescript-eslint/restrict-plus-operands": "warn",
        "@typescript-eslint/restrict-template-expressions": "warn",
        "@typescript-eslint/return-await": "warn",
        "@typescript-eslint/strict-boolean-expressions": "warn",
        "@typescript-eslint/switch-exhaustiveness-check": "warn",
        "@typescript-eslint/triple-slash-reference": "warn",
        "@typescript-eslint/typedef": "off",
        "@typescript-eslint/unbound-method": "warn",
        "@typescript-eslint/unified-signatures": "warn",
        "@typescript-eslint/use-unknown-in-catch-callback-variable": "warn",
    },
};

const stylisticRules: InfiniteDepthConfigWithExtends = {
    rules: {
        "@stylistic/array-bracket-newline": ["warn", "consistent"],
        "@stylistic/array-bracket-spacing": "warn",
        "@stylistic/array-element-newline": ["warn", "consistent"],
        "@stylistic/arrow-parens": "warn",
        "@stylistic/arrow-spacing": "warn",
        "@stylistic/block-spacing": "warn",
        "@stylistic/brace-style": "warn",
        "@stylistic/comma-dangle": ["warn", "always-multiline"],
        "@stylistic/comma-spacing": "warn",
        "@stylistic/comma-style": "warn",
        "@stylistic/computed-property-spacing": "warn",
        "@stylistic/curly-newline": "warn",
        "@stylistic/dot-location": ["warn", "property"],
        "@stylistic/eol-last": "warn",
        "@stylistic/func-call-spacing": "warn",
        "@stylistic/function-call-argument-newline": ["warn", "consistent"],
        "@stylistic/function-call-spacing": "warn",
        "@stylistic/function-paren-newline": ["warn", "consistent"],
        "@stylistic/generator-star-spacing": "warn",
        "@stylistic/implicit-arrow-linebreak": "off",
        "@stylistic/indent": ["warn", INDENTATION_SIZE],
        "@stylistic/indent-binary-ops": "off",
        "@stylistic/jsx-child-element-spacing": "warn",
        "@stylistic/jsx-closing-bracket-location": "warn",
        "@stylistic/jsx-closing-tag-location": "warn",
        "@stylistic/jsx-curly-brace-presence": "warn",
        "@stylistic/jsx-curly-newline": "warn",
        "@stylistic/jsx-curly-spacing": "warn",
        "@stylistic/jsx-equals-spacing": "warn",
        "@stylistic/jsx-first-prop-new-line": "warn",
        "@stylistic/jsx-function-call-newline": "warn",
        "@stylistic/jsx-indent": "warn",
        "@stylistic/jsx-indent-props": "warn",
        "@stylistic/jsx-max-props-per-line": "warn",
        "@stylistic/jsx-newline": "warn",
        "@stylistic/jsx-one-expression-per-line": "warn",
        "@stylistic/jsx-pascal-case": "warn",
        "@stylistic/jsx-props-no-multi-spaces": "warn",
        "@stylistic/jsx-quotes": "warn",
        "@stylistic/jsx-self-closing-comp": "warn",
        "@stylistic/jsx-sort-props": "warn",
        "@stylistic/jsx-tag-spacing": "warn",
        "@stylistic/jsx-wrap-multilines": "warn",
        "@stylistic/key-spacing": "warn",
        "@stylistic/keyword-spacing": "warn",
        "@stylistic/line-comment-position": "warn",
        "@stylistic/linebreak-style": "warn",
        "@stylistic/lines-around-comment": "warn",
        "@stylistic/lines-between-class-members": "warn",
        "@stylistic/max-len": ["warn", { code: 120 }],
        "@stylistic/max-statements-per-line": "warn",
        "@stylistic/member-delimiter-style": "warn",
        "@stylistic/multiline-comment-style": ["warn", "separate-lines"],
        "@stylistic/multiline-ternary": "warn",
        "@stylistic/new-parens": "warn",
        "@stylistic/newline-per-chained-call": "warn",
        "@stylistic/no-confusing-arrow": "warn",
        "@stylistic/no-extra-parens": "off",
        "@stylistic/no-extra-semi": "warn",
        "@stylistic/no-floating-decimal": "warn",
        "@stylistic/no-mixed-operators": "warn",
        "@stylistic/no-mixed-spaces-and-tabs": "warn",
        "@stylistic/no-multi-spaces": "warn",
        "@stylistic/no-multiple-empty-lines": "warn",
        "@stylistic/no-tabs": "warn",
        "@stylistic/no-trailing-spaces": "warn",
        "@stylistic/no-whitespace-before-property": "warn",
        "@stylistic/nonblock-statement-body-position": "warn",
        "@stylistic/object-curly-newline": "warn",
        "@stylistic/object-curly-spacing": ["warn", "always"],
        "@stylistic/object-property-newline": "warn",
        "@stylistic/one-var-declaration-per-line": "warn",
        "@stylistic/operator-linebreak": ["warn", "after"],
        "@stylistic/padded-blocks": ["warn", "never"],
        "@stylistic/padding-line-between-statements": "warn",
        "@stylistic/quote-props": [
            "warn",
            "as-needed",
            {
                keywords: false,
                numbers: true,
                unnecessary: true,
            },
        ],
        "@stylistic/rest-spread-spacing": "warn",
        "@stylistic/semi-spacing": "warn",
        "@stylistic/semi-style": "warn",
        "@stylistic/space-before-blocks": "warn",
        "@stylistic/space-before-function-paren": [
            "warn",
            {
                anonymous: "never",
                asyncArrow: "always",
                named: "never",
            },
        ],
        "@stylistic/space-in-parens": "warn",
        "@stylistic/space-infix-ops": "warn",
        "@stylistic/space-unary-ops": "warn",
        "@stylistic/spaced-comment": "warn",
        "@stylistic/switch-colon-spacing": "warn",
        "@stylistic/template-curly-spacing": "warn",
        "@stylistic/template-tag-spacing": "warn",
        "@stylistic/type-annotation-spacing": [
            "warn",
            {
                after: true,
                before: false,
                overrides: {
                    arrow: {
                        after: true,
                        before: true,
                    },
                },
            },
        ],
        "@stylistic/type-generic-spacing": "warn",
        "@stylistic/type-named-tuple-spacing": "warn",
        "@stylistic/wrap-iife": "warn",
        "@stylistic/wrap-regex": "warn",
        "@stylistic/yield-star-spacing": "warn",
    },
};

const jsdocRules: InfiniteDepthConfigWithExtends = {
    rules: {
        "jsdoc/check-access": "warn",
        "jsdoc/check-alignment": "warn",
        "jsdoc/check-line-alignment": "warn",
        "jsdoc/check-param-names": "warn",
        "jsdoc/check-property-names": "warn",
        "jsdoc/check-syntax": "warn",
        "jsdoc/check-tag-names": "warn",
        "jsdoc/check-template-names": "warn",
        "jsdoc/check-types": "warn",
        "jsdoc/check-values": "warn",
        "jsdoc/empty-tags": "warn",
        "jsdoc/implements-on-classes": "warn",
        "jsdoc/informative-docs": "warn",
        "jsdoc/lines-before-block": "warn",
        "jsdoc/match-description": "warn",
        "jsdoc/multiline-blocks": "warn",
        "jsdoc/no-bad-blocks": "warn",
        "jsdoc/no-blank-block-descriptions": "warn",
        "jsdoc/no-blank-blocks": "warn",
        "jsdoc/no-defaults": "off",
        "jsdoc/no-multi-asterisks": "warn",
        "jsdoc/no-types": "off",
        "jsdoc/no-undefined-types": "warn",
        "jsdoc/require-asterisk-prefix": "warn",
        "jsdoc/require-description": "warn",
        "jsdoc/require-description-complete-sentence": "warn",
        "jsdoc/require-example": "off",
        "jsdoc/require-file-overview": "off",
        "jsdoc/require-hyphen-before-param-description": "warn",
        "jsdoc/require-jsdoc": "warn",
        "jsdoc/require-param": "warn",
        "jsdoc/require-param-description": "warn",
        "jsdoc/require-param-name": "warn",
        "jsdoc/require-param-type": "warn",
        "jsdoc/require-property": "warn",
        "jsdoc/require-property-description": "warn",
        "jsdoc/require-property-name": "warn",
        "jsdoc/require-property-type": "warn",
        "jsdoc/require-returns": "warn",
        "jsdoc/require-returns-check": "warn",
        "jsdoc/require-returns-description": "warn",
        "jsdoc/require-returns-type": "warn",
        "jsdoc/require-template": "warn",
        "jsdoc/require-throws": "warn",
        "jsdoc/require-yields": "warn",
        "jsdoc/require-yields-check": "warn",
        "jsdoc/sort-tags": "warn",
        "jsdoc/tag-lines": "warn",
        "jsdoc/text-escaping": "warn",
        "jsdoc/valid-types": "warn",
    },
};

const config = tseslint.config(
    eslintConfigPrettier,
    {
        ignores: ["./dist"],
    },
    {
        extends: [
            js.configs.all,
            tseslint.configs.all,
            jsdoc.configs["flat/contents-typescript"],
            jsdoc.configs["flat/logical-typescript"],
            jsdoc.configs["flat/recommended-typescript"],
            jsdoc.configs["flat/stylistic-typescript"],
        ],
        files: ["./**/*.mts"],
        languageOptions: {
            ecmaVersion: 2024,
            parserOptions: {
                projectService: true,
                tsconfigRootDir: import.meta.dirname,
            },
        },
        plugins: {
            "@stylistic": stylistic,
        },
        rules: {
            ...jsRules.rules,
            ...typescriptRules.rules,
            ...stylisticRules.rules,
            ...jsdocRules.rules,
        },
    },
    {
        files: ["./scripts/**/*.mts"],
        rules: {
            "no-console": "off",
        },
    },
    {
        files: ["./tests/**/*.mts"],
        rules: {
            "@typescript-eslint/no-magic-numbers": "off",
            "@typescript-eslint/no-unsafe-type-assertion": "off",
        },
    },
    {
        files: ["./*.mts"],
        rules: {
            "@typescript-eslint/naming-convention": ["off"],
            "max-lines": ["off"],
        },
    },
);

export default config;
