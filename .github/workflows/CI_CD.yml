name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  workflow_dispatch:

env:
  DEPLOY: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
  TAG: ${{ github.event_name == 'push' }}

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          submodules: true
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v4.2.2
        with:
          path: ./node_modules
          key: app-node-modules-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            app-node-modules-

      - name: Install packages
        run: yarn

      - name: Create local tag
        if: ${{ env.TAG == 'true' }}
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const { tsImport } = await import('${{ github.workspace }}/node_modules/tsx/dist/esm/api/index.cjs');
            const { default: createNewVersionTag } = await tsImport('./scripts/createNewVersionTag.mts', '${{ github.workspace }}/');
            await createNewVersionTag();

      - name: Build
        run: yarn verify

      - name: Upload
        if: ${{ env.DEPLOY == 'true' }}
        id: upload
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: dist/

      - name: Push tag
        if: ${{ env.TAG == 'true' }}
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ github.token }}
          script: |
            const { tsImport } = await import('${{ github.workspace }}/node_modules/tsx/dist/esm/api/index.cjs');
            const { default: pushLatestTags } = await tsImport('./scripts/pushLatestTags.mts', '${{ github.workspace }}/');
            await pushLatestTags(github, context);

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: verify

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Deploy
        if: ${{ env.DEPLOY == 'true' }}
        id: deploy
        uses: actions/deploy-pages@v4.0.5
